name: Daily Farm Points

permissions:
  contents: write
  issues: write
  pull-requests: write
  pages: write
  releases: write

on:
  schedule:
    - cron: '0 0 * * *'    # ogni giorno a mezzanotte
  workflow_dispatch:

jobs:
  farm-points:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configura Git per bocaletto-luca
        run: |
          git config user.name "bocaletto-luca"
          git config user.email "${{ secrets.BOCA_EMAIL }}"

      - name: Imposta timestamp
        run: echo "TIMESTAMP=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_ENV

      - name: Commit giornaliero (src/daily.txt)
        run: |
          mkdir -p src
          echo "daily at $TIMESTAMP" >> src/daily.txt
          git add src/daily.txt
          git commit --allow-empty -m "chore: daily commit at $TIMESTAMP"

      - name: Push commit
        run: git push origin main

      - name: Apri e chiudi un’issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `daily-issue ${new Date().toISOString()}`
            });
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.data.number,
              state: "closed"
            });

      - name: Crea e merge una PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = `daily-pr-${Date.now()}`;
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/heads/${branch}`,
              sha: context.sha
            });
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: branch,
              base: "main",
              title: `daily-pr ${branch}`
            });
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.data.number,
              merge_method: "merge"
            });
            await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `heads/${branch}`
            });

      - name: Aggiorna Wiki Home.md
        uses: devops-infra/action-wiki@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Commit Wiki update
        run: |
          echo "- daily wiki at $TIMESTAMP" > docs/Home.md
          git add docs/Home.md
          git commit -m "chore: daily wiki $TIMESTAMP"
          git push origin main

      - name: Crea tag e release
        id: set-tag
        run: echo "TAG=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV
      - name: Release GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "daily-${{ env.TAG }}"
          name: "Daily release ${{ env.TAG }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Commenta sull’ultima issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1,
              sort: "created",
              direction: "desc"
            });
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issues.data[0].number,
              body: `daily-comment at ${new Date().toISOString()}`
            });
